
// array element will be distinct 
//pick every element from nums1 and first find position of picked element in nums2  and then find the next grater element of this element from 
//that position





Input: nums1 = [4,1,2], nums2 = [1,3,4,2]
Output: [-1,3,-1]




//brute force

/*class Solution {
public:
     
vector<int> nextGreaterElement(vector<int>& arr1, vector<int>& arr2) {
   
   int n1=arr1.size();
   int n2=arr2.size();

  vector<int>ans;  
  map<int,int>mp;

for(int i=0;i<n1;i++){
    for(int j=0;j<n2;j++){
      if(arr1[i]==arr2[j]){
          mp[arr1[i]]=j;
          break;
      }     
    }
}
  
    
for(int i=0;i<n1;i++){
    
    if(mp[arr1[i]]==n2-1)ans.push_back(-1);
    for(int j=mp[arr1[i]]+1;j<n2;j++){
       
        if(arr1[i]<arr2[j]){
            ans.push_back(arr2[j]);
            break;
        }
        
        if(j==n2-1 && !(arr1[i]<arr2[j]))ans.push_back(-1);
        
    }
}
       
    return ans;
  }
    
    
};

*/










//optimal solution using stack

/*
class Solution {
public:
     
vector<int> nextGreaterElement(vector<int>& arr1, vector<int>& arr2) {
   
   int n1=arr1.size();
   int n2=arr2.size();

  stack<int>st;
    
  map<int,int>mp;
    
  for(int i=n2-1;i>=0;i--){
    
      if(!st.empty()){
         
    while(!st.empty()){
      
        int a=st.top();
        if(a>arr2[i]){
           // ans.push_back(a);
            mp[arr2[i]]=a;
            st.push(arr2[i]);
            break;
        }
        st.pop();
        
    }      
          
          
      }
      
      if(st.empty()){
          mp[arr2[i]]=-1;
          st.push(arr2[i]);
      }
         
  }
    
    
 vector<int>res;
    
    for(int i=0;i<n1;i++){
        int a=mp[arr1[i]];
        res.push_back(a);
    }
    
    
    return res;
    
    
    
  }
    
    
};


*/

